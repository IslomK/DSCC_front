@model WebApp.Models.RegisterVM

@{
    Layout = null;
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>
        @if (!string.IsNullOrWhiteSpace(ViewBag.Title))
        {
            @ViewBag.Title@: -
        }
        AdminLTE
    </title>
    <meta content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no" name="viewport">
    <script src="https://www.google.com/recaptcha/api.js" async defer></script>
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,600,700,300italic,400italic,600italic">
    @Styles.Render("~/bundles/css")

</head>
<body class="hold-transition register-page">
    <div class="register-box">
        <div class="register-box-body">
            <p class="login-box-msg">Register a new membership</p>

            @using (Html.BeginForm("Register", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group has-feedback">
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", @type = "text", @placeholder = "First Name" } })
                    <span class="glyphicon glyphicon-user form-control-feedback"></span>
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger", @required="required" })

                </div>
                <div class="form-group has-feedback">
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", @type = "text", @placeholder = "Last Name" } })
                    <span class="glyphicon glyphicon-user form-control-feedback"></span>
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger", @required="required" })

                </div>
                <div class="form-group has-feedback">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @required="required", @class = "form-control", @type = "email", @placeholder = "Email" } })
                    <span class="glyphicon glyphicon-envelope form-control-feedback"></span>
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
                <div class="form-group has-feedback">
                    @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control datepicker", @type = "text", @placeholder = "DOB" } })
                    <span class="fa fa-calendar form-control-feedback"></span>
                    @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })

                </div>

                <div class="form-group has-feedback">
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @type = "password", @placeholder = "Password" } })
                    <span class="glyphicon glyphicon-lock form-control-feedback"></span>
                    @Html.ValidationMessageFor(model => model.Password, "", new { @required="required", @class = "text-danger" })

                </div>
                <div class="form-group has-feedback">
                    @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", @type = "password", @placeholder = "Confirm Password" } })
                    <span class="glyphicon glyphicon-log-in form-control-feedback"></span>
                    @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                </div>
                <div class="form-group has-feedback">
                    @Html.Label("Pick your picture")
                    <input type="file" name="Avatar" />
                    @Html.ValidationMessageFor(model => model.Avatar, "", new { @class = "text-danger" })

                </div>
                <div class="g-recaptcha" data-sitekey="6LcgfNoUAAAAADLDa7qqGNd4hHnpi8aVSx40W7jI"></div>

                <div class="row">
                    <div class="col-xs-4">
                        <button type="submit" class="btn btn-primary btn-block btn-flat">Register</button>
                    </div>
                </div>
            }
            <a href="@Url.Action("Login", "Home")" class="text-center">Login</a>
        </div>
        <!-- /.form-box -->
    </div>
    @Scripts.Render("~/bundles/js")
</body>
</html>