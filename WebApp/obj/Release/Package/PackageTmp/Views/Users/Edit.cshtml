@model DAL.Entities.User

<div class="register-box">
    <div class="register-box-body">
        <p class="login-box-msg">Register a new membership</p>

        @using (Html.BeginForm("Edit", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group has-feedback">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", @type = "text", @placeholder = "First Name" } })
                <span class="glyphicon glyphicon-user form-control-feedback"></span>
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })

            </div>
            <div class="form-group has-feedback">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", @type = "text", @placeholder = "Last Name" } })
                <span class="glyphicon glyphicon-user form-control-feedback"></span>
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })

            </div>
            <div class="form-group has-feedback">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @type = "email", @placeholder = "Email" } })
                <span class="glyphicon glyphicon-envelope form-control-feedback"></span>
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
            <div class="form-group has-feedback">
                @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control datepicker", @type = "text", @placeholder = "DOB" } })
                <span class="fa fa-calendar form-control-feedback"></span>
                @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })

            </div>

            <div class="form-group has-feedback">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @type = "password", @placeholder = "Password" } })
                <span class="glyphicon glyphicon-lock form-control-feedback"></span>
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })

            </div>
            @*<div class="form-group has-feedback">
                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", @type = "password", @placeholder = "Confirm Password" } })
                <span class="glyphicon glyphicon-log-in form-control-feedback"></span>
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
            </div>*@
            <div class="form-group has-feedback">
                @Html.Label("Pick your picture")
                <input type="file" name="Avatar" />
                @Html.ValidationMessageFor(model => model.Avatar, "", new { @class = "text-danger" })

            </div>
            <div class="row">
                <div class="col-xs-4">
                    <button type="submit" class="btn btn-primary btn-block btn-flat">Register</button>
                </div>
            </div>
        }
    </div>
    <!-- /.form-box -->
</div>
